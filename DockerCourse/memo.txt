Docker講座

環境構築時間削減
アプリ実行環境の品質UP
自動化ソフトとの相性がいい
実行環境の統一

コンテナ→アプリをパッケージ化された箱

仮想環境PCの中にPCを作る
ホストOSゲストOS
ドッカーはその区切りがない

どっかーと仮想環境は別物
Dockerメリットインフラのコード化

ドッカーイメージa
タグを指定
イメージ名:タグ名
Ubuntu:18.04→タグ名なければ最新版latest
Docker compose 複数コンテナ管理

DockerID
daichan0413

コマンド一覧

docker run
オプション
—name
コンテナに任意の名前をつける
-rm
プロセスが終了したらコンテナを削除
 —volume
コンテナにホストのディレクトリをマウント


docker ps
	起動中のコンテナを表示するコマンド
オプション

まとめるのキリがないからしない


コンテナを削除してからイメージを削除しないと削除できない
コンテナ削除してから設計図を削除してあげるイメージ


runとCMD
どちらも実行
RUN:Dockerfile→イメージ化するとき
CMD:イメージからコンテナかするとき

COPYとADD
どちらもファイルをイメージに追加
ADDはネット経由でも追加できる
COPYローカルからの追加こっちが推奨されている

Yamlファイル
設定ファイル、スペースで親子関係を表現するファイル形式

Volumes
ホスト側とコンテナ側でディレクトリを共有
永続化
相対パスで書いたがいい

Ports
コンテナのポート開放とポートフォワーディング
外部公開ポート：コンテナ内部ポート でかく

コマンドはdocker-compose ps(どこのディレクトリでも一応できる上の階層を見に行ってくれる) 等

Dockerファイル、Dockerイメージになれば変わることがないから
Installなどの不変情報はこっち

Docker-composeでやれば設定変更しやすいらしい

